// AngelScript bugs checker
//
// (compiles, current revision)        // pass
// (doesn't compile, current revision) // r[revision] -- [error]
// (compiles, future revision)         // r[revision] -- pass
// (description)                       // [what it means for us]
//  void name(...) {...}

// pass
void defaultArg1(int x = 1) {}

// pass
void defaultArg2_1(int x = (1))                                     {}
void defaultArg2_2(int x = (1))                                     {}
void defaultArg2_3(int x = (2 + 2))                                 {}
void defaultArg2_4(int x = (2 * 2 / 2 + 2 - 2) % 2 == 2 ? 22 : 222) {}

// pass
import void defaultArg3_1(int x = 0) from "other_module";
import void defaultArg3_2(int x = (2 * 2 / 2 + 2 - 2) % 2 == 2 ? 22 : 222) from "other_module";

// r1558 - ERR  : Identifier 'array' is not a data type
/*
   namespace nsTest
   {
        array<int> arrgh;
   };
 */
// r1558 - wall of errors

// file1
namespace nsTestTwo
{
    shared interface nsIface
    {
        nsIface@ parent { get; }
    };
}

// file2
namespace nsTestTwo
{
    class nsClass : nsIface
    {
        nsIface@ mommy;

        nsClass(nsIface@ parent)
        {
            @this.mommy = parent;
        }

        nsIface@ get_parent()
        {
            return(@this.mommy);
        }
    };

    nsIface@ nsMommy()
    {
        nsClass@ p = nsClass(null);
        nsClass@ c = nsClass(p);
        return(@c);
    }
}

// r1574 -- crash (cfuncdef1_1::crashme())

funcdef void funcdef1(ifuncdef1_1& i);

shared interface ifuncdef1_1
{
    ifuncdef1_2@ events { get; set; }
    void crashme();
};

shared interface ifuncdef1_2
{
    funcdef1@ f { get; set; }
};

class cfuncdef1_1 : ifuncdef1_1
{
    ifuncdef1_2@ _events_;

    cfuncdef1_1()
    {
        @this._events_ = cfuncdef1_2();
    }

    ifuncdef1_2@ get_events()                    { return(this._events_); }
    void         set_events(ifuncdef1_2@ events) { @this._events_ = events; }

    void crashme()
    {
        if(@this.events != null && @this.events.f != null)
        {
            this.events.f(this);
        }

    }
};

class cfuncdef1_2 : ifuncdef1_2
{
    funcdef1@ ff;

    cfuncdef1_2()
    {
        @ff = null;
    }

    funcdef1@ get_f()             { return(@this.ff); }
    void      set_f(funcdef1@ _f) { @this.ff = _f; }
};

void start()
{
    ifuncdef1_1@ i = cfuncdef1_1();
    i.events.f = end;
    i.crashme();
}

void end(ifuncdef1_1& i)
{
    callstack();
}
