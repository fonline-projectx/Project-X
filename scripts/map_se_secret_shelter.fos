//
// FOnline: Reloaded
// Cubik
//
// map_se_secret_shelter.fos
//

// Skrytka w Å›cianie ) Special EncounterProtoId 139, HexXx, HexY = 50, 52 - losowe itemy w skrytce, zamiast statycznego pistol gaussa 

#include "_macros.fos"
//#include "mapdata_h.fos"
//#include "messages_h.fos"
//#include "npc_planes_h.fos"
//#include "npc_roles_h.fos"




void _MapInit(Map& map, bool firstTime)
{
    //if(firstTime)
    {
		//map.SetEvent(MAP_EVENT_IN_CRITTER,"_Map_InCritter");
		
		Item@ skrytka=map.GetItem(50, 52, 139);  // istniejaca na mapie skrytka w scianie, w ktorej beda spawnowane itemy
		if(valid(skrytka))
		{		
			switch (Random(1,11))
			{
				case 1: 	{ skrytka.AddItem(PID_VINDICATOR_MINIGUN, 1, 0); skrytka.AddItem(PID_4_7MM_CASELESS, 100, 0); break;}
				case 2: 	{ skrytka.AddItem(PID_BOZAR, 1, 0); skrytka.AddItem(PID_223_FMJ, 100, 0); break;}
				case 3: 	{ skrytka.AddItem(PID_M72_GAUSS_RIFLE, 1, 0); skrytka.AddItem(PID_2MM_EC_AMMO, 20, 0); break;}
				case 4: 	{ skrytka.AddItem(PID_PK12_GAUSS_PISTOL, 1, 0); skrytka.AddItem(PID_2MM_EC_AMMO, 20, 0); break;}
				case 5: 	{ skrytka.AddItem(PID_YK32_PULSE_PISTOL, 1, 0); skrytka.AddItem(PID_SMALL_ENERGY_CELL, 20, 0); break;}
				case 6: 	{ skrytka.AddItem(PID_YK42B_PULSE_RIFLE, 1, 0); skrytka.AddItem(PID_MICRO_FUSION_CELL, 20, 0); break;}
				case 7: 	{ skrytka.AddItem(PID_SOLAR_SCORCHER, 1, 0); break;}
				case 8: 	{ skrytka.AddItem(PID_TURBO_PLASMA_RIFLE, 1, 0); skrytka.AddItem(PID_MICRO_FUSION_CELL, 20, 0); break;}
				case 9: 	{ skrytka.AddItem(PID_KEEPBRIGE_ROBE, 1, 0); break;}
				case 10: 	{ skrytka.AddItem(PID_POWERED_ARMOR, 1, 0); skrytka.AddItem(PID_POWER_HELMET, 1, 0); break;}
				case 11: 	{ skrytka.AddItem(PID_HARDENED_POWER_ARMOR, 1, 0); skrytka.AddItem(PID_HARDENED_POWER_HELMET, 1, 0); break;}	
				default: break;
			}
			
			if(Random(1,10)==1)
			{
				switch (Random(1,10))
				{
				case 1: 	{ skrytka.AddItem(PID_IMPLANT_DERMAL, 1, 0); break;}
				case 2: 	{ skrytka.AddItem(PID_IMPLANT_PHOENIX, 1, 0); break;}
				case 3: 	{ skrytka.AddItem(PID_IMPLANT_NEMEAN, 1, 0); break;}
				case 4: 	{ skrytka.AddItem(PID_IMPLANT_STRENGTH, 1, 0); break;}
				case 5: 	{ skrytka.AddItem(PID_IMPLANT_PERCEPTION, 1, 0); break;}
				case 6: 	{ skrytka.AddItem(PID_IMPLANT_ENDURANCE, 1, 0); break;}
				case 7: 	{ skrytka.AddItem(PID_IMPLANT_CHARISMA, 1, 0); break;}
				case 8: 	{ skrytka.AddItem(PID_IMPLANT_INTELLIGENCE, 1, 0); break;}
				case 9: 	{ skrytka.AddItem(PID_IMPLANT_AGILITY, 1, 0); break;}
				case 10: 	{ skrytka.AddItem(PID_IMPLANT_LUCK, 1, 0); break;}
				default: break;
				}
			
			}
			
			
		}
    }
}



